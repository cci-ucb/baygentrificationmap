{"version":3,"sources":["utils/SymbologyFunctions.js","components/Legend.js","components/LeafletMap.js","App.js","serviceWorker.js","index.js"],"names":["SymbologyFunctions","options","legend_style","d","breaks","colors","column_name","value","symbol","numberWithCommas","x","toString","replace","Legend","props","react_default","a","createElement","className","map_name","helpers","map","i","toUpperCase","style","backgroundColor","key","classes","LeafletMap","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lat","lng","zoom","prevProps","prevState","_this2","focusData","data","refs","leafletElement","focusOptions","mapOptions","find","option","type","focusDataType","eachLayer","layer","feature","properties","_popup","setContent","concat","tractce","tract","_city","_county","_this3","position","onEachFeature","bindPopup","colorFunction","mapStyle","geoJsonFeature","fillColor","weight","opacity","color","fillOpacity","Map","ref","center","minZoom","maxZoom","zoomControl","scrollWheelZoom","TileLayer","url","attribution","pane","GeoJSON","gentrificationData","demographicData","ZoomControl","components_Legend","React","Component","GENT_LAYER_NAMES","App","fetch","then","response","json","responseJson","setState","catch","error","console","uk-dropdown","dataset","href","onClick","components_LeafletMap","includes","uk-spinner","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.905f3160.chunk.js","sourcesContent":["export default {\n\n    getColorFunction(options) {\n        if (options.legend_style === \"standard\") {\n        return (d) => (\n            d < options.breaks[0] ? options.colors[0] :\n            d < options.breaks[1] ? options.colors[1] :\n            d < options.breaks[2] ? options.colors[2] :\n            d < options.breaks[3] ? options.colors[3] :\n            d >= options.breaks[3] ? options.colors[4] :\n            '#CCCCCC');\n        }\n        else if (options.legend_style === \"classes\") {\n        return (d) => (\n            d === options.breaks[0] ? options.colors[0] :\n            d === options.breaks[1] ? options.colors[1] :\n            '#CCCCCC');\n        }\n        else if (options.legend_style === \"custom\") {\n            if (options.column_name === \"udp_2015_1\") {\n                return (d) => (\n                d === 'LI - Not Losing Low Income Households or Very Early Stages of Gentrification/Displacement' ? '#d9d7e9' :\n                d === 'LI - At Risk of Gentrification and/or Displacement' ? '#b7b5d6' :\n                d === 'LI - Ongoing Gentrification and/or Displacement' ? '#9080ba' :\n                d === 'MHI - Advanced Gentrification' ? '#FFDB74' :\n                d === 'MHI - Not Losing Low Income Households or Very Early Stages of Displacement' ? '#feedde' :\n                d === 'MHI - At Risk of Exclusion' ? '#fdbe85' :\n                d === 'MHI - Ongoing Exclusion' ? '#fd8d3c' :\n                d === 'MHI - Advanced Exclusion' ? '#d94701' :\n                    '#CCCCCC');\n            }\n            else if (options.column_name === \"commercial_gent_status\") {\n                return (d) => (\n                d === 'Did not gentrify' ? '#d7d7d7' :\n                d === 'Gentrified 1990-2000' ? '#a6cee3' :\n                d === 'Gentrified 2000-2013' ? '#1f78b4' :\n                d === 'Gentrified both periods' ? '#33a02c' :\n                    '#CCCCCC00');\n            }\n        }\n        else {\n            return (d) => ('#CCCCCC');\n        }\n    },\n\n    symbolize(value, symbol) {\n        const numberWithCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n        return (symbol === '$' ? '$' + numberWithCommas(value) : \n        symbol === 'word' ? (value === 1 ? 'Yes' : value === 0 ? 'No' : 'Unknown'):\n        symbol === 'text' ? value :\n        numberWithCommas(value) + symbol)\n    }\n    \n}","import React from 'react';\nimport helpers from '../utils/SymbologyFunctions';\n\nconst Legend = (props) => {\n\n    return (\n    <div className=\"uk-card uk-card-default uk-card-body uk-width-1-2@m uk-card-small map-legend\">\n        <h5>{props.options.map_name}</h5>\n        {props.options.legend_style === \"standard\" ?\n        <div>\n            <div className=\"legend-items\">\n                <div className=\"legend-label\">{helpers.symbolize(props.options.breaks[0], props.options.symbol)}</div>\n                <div className=\"legend-label\">&nbsp;</div>\n                <div className=\"legend-label\">{helpers.symbolize((props.options.breaks[1] + props.options.breaks[2])/2, props.options.symbol)}</div>\n                <div className=\"legend-label\">&nbsp;</div>\n                <div className=\"legend-label\">{helpers.symbolize(props.options.breaks[3], props.options.symbol)}</div>\n            </div>\n            <div className=\"legend-items\">\n                {[0,1,2,3,4].map( (i) => \n                    (<div className={\"legend-color gradient-\" + (i + 1) + (props.options.colors[i].toUpperCase() === '#FFFFFF' ? \" with-border\":\"\")} \n                    style={ { backgroundColor: props.options.colors[i] } } key={i} />)\n                )}\n            </div>\n        </div> :\n        props.options.legend_style === \"classes\" ?\n        <div>\n            <div className=\"legend-items\">\n                <div className=\"legend-label large\">{props.options.classes[0]}</div>\n                <div className=\"legend-label large\">{props.options.classes[1]}</div>\n            </div>\n            <div className=\"legend-items\">\n                <div className=\"legend-color large color-no\" style={ { backgroundColor: props.options.colors[0] } } />\n                <div className=\"legend-color large color-yes\" style={ { backgroundColor: props.options.colors[1] } } />\n            </div>\n        </div> : \n        props.options.legend_style === \"custom\" && props.options.column_name === \"udp_2015_1\" ?\n        <div>\n            <h6>Lower income (LI) tracts</h6>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#d9d7e9' }} /> \n                <span>Not Losing Low Income Households</span>\n                <br/>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#b7b5d6' }} />\n                <span>At Risk of Gentrification and/or Displacement</span>\n                <br/>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#9080ba' }} />\n                <span>Ongoing Gentrification and/or Displacement</span>\n            <h6>Moderate to high income (MHI) tracts</h6>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#FFDB74' }} />\n                <span>Advanced Gentrification</span>\n                <br/>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#feedde' }} />\n                <span>Not Losing Low Income Households</span>\n                <br/>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#fdbe85' }} />\n                <span>At Risk of Exclusion</span>\n                <br/>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#fd8d3c' }} />\n                <span>Ongoing Exclusion</span>\n                <br/>\n                <div className=\"legend-dot\" style={ { backgroundColor: '#d94701' }} />\n                <span>Advanced Exclusion</span>\n            <br/>\n        </div> :\n         props.options.legend_style === \"custom\" && props.options.column_name === \"commercial_gent_status\" ?\n         <div>\n            <div className=\"legend-dot\" style={ { backgroundColor: '#d7d7d7' }} /> \n            <span>Did not gentrify</span>\n            <br/>\n            <div className=\"legend-dot\" style={ { backgroundColor: '#a6cee3' }} />\n            <span>Gentrified 1990-2000</span>\n            <br/>\n            <div className=\"legend-dot\" style={ { backgroundColor: '#1f78b4' }} />\n            <span>Gentrified 2000-2013</span>\n            <br/>\n            <div className=\"legend-dot\" style={ { backgroundColor: '#33a02c' }} />\n            <span>Gentrified both periods</span>\n        </div> :\n        <div/>\n        }\n    </div>);\n}\n\nexport default Legend; \n","import React from 'react';\nimport { Map, TileLayer, GeoJSON, ZoomControl} from 'react-leaflet';\n\nimport Legend from './Legend';\nimport mapOptions from '../data/mapOptions.json';\n\nimport helpers from '../utils/SymbologyFunctions';\n\nimport '../App.scss'\n\nclass LeafletMap extends React.Component {\n\nconstructor() {\n  super()\n  this.state = {\n    lat: 37.7,\n    lng: -122,\n    zoom: 10\n  }\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  \n  if (prevProps.focusData !== this.props.focusData && this.props.focusData) {\n\n    const data = this.refs.data.leafletElement;\n    const focusOptions = mapOptions && mapOptions.find( (option) =>\n      (option.column_name === this.props.focusData)\n    );\n\n    const type = this.props.focusDataType;\n\n    data.eachLayer(function (layer) {\n      var data = layer.feature.properties;\n      layer._popup.setContent(\n      (type === 'gentrification' ? \n\n      `<p class=\"uk-text-muted\">CENSUS TRACT</p>\n      <span>${data.tractce}</span>` :\n\n      `<p class=\"uk-text-muted\">CENSUS TRACT</p>\n      <span>${data.tract}</span>\n      <p class=\"uk-text-muted\">ASSOCIATED CITY</p>\n      <span>${data._city}</span>\n      <p class=\"uk-text-muted\">COUNTY</p>\n      <span>${data._county}</span>`) + \n\n      `<p class=\"uk-text-muted uk-text-uppercase\">${focusOptions.map_name}</p>\n      <span>${(data[focusOptions.column_name] === null ? 'N/A' : helpers.symbolize(data[focusOptions.column_name],focusOptions.symbol))}</span>`);\n    });\n  }\n}\n\nrender() {\n  const position = [this.state.lat, this.state.lng];\n  const focusOptions = mapOptions && mapOptions.find( (option) =>\n    (option.column_name === this.props.focusData)\n  );\n\n  const type = this.props.focusDataType;\n\n  const onEachFeature = function(feature,layer) { \n    layer.bindPopup(\n      (type === 'gentrification' ? \n\n      `<p class=\"uk-text-muted\">CENSUS TRACT</p>\n      <span>${feature.properties.tractce}</span>` :\n\n      `<p class=\"uk-text-muted\">CENSUS TRACT</p>\n      <span>${feature.properties.tract}</span>\n      <p class=\"uk-text-muted\">ASSOCIATED CITY</p>\n      <span>${feature.properties._city}</span>\n      <p class=\"uk-text-muted\">COUNTY</p>\n      <span>${feature.properties._county}</span>`) +\n      `<p class=\"uk-text-muted uk-text-uppercase\">${focusOptions.map_name}</p>\n      <span>${(feature.properties[focusOptions.column_name] === null ? 'N/A' : helpers.symbolize(feature.properties[focusOptions.column_name],focusOptions.symbol))}</span>`\n    );\n  }\n\n  const colorFunction = helpers.getColorFunction(focusOptions);\n\n  const mapStyle = function (geoJsonFeature) {\n      return {\n        fillColor: colorFunction(geoJsonFeature.properties[focusOptions.column_name]),\n        weight: 1,\n        opacity: 0.65,\n        color: \"#FFF\",\n        fillOpacity: 0.9\n      } ;\n    }\n\n  return (\n    <div>\n      <Map ref='map' center={position} zoom={this.state.zoom} \n        minZoom={8} maxZoom={14} zoomControl={false} scrollWheelZoom={true} \n        className=\"map-container\">\n        <TileLayer \n          className=\"basemap-layer\" url=\"http://basemaps.cartocdn.com/rastertiles/voyager_nolabels/{z}/{x}/{y}{r}.png\" \n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>' />\n        <TileLayer \n          className=\"reference-layer\" url=\"https://{s}.basemaps.cartocdn.com/light_only_labels/{z}/{x}/{y}{r}.png\" \n          pane=\"shadowPane\" />  \n          {this.props.focusData && \n          (this.props.focusDataType === \"gentrification\" ?  \n            <GeoJSON \n              ref='data' key='gentrification'\n              data={this.props.gentrificationData} \n              style={mapStyle} onEachFeature={onEachFeature} /> :\n            <GeoJSON \n              ref='data' key='demographic'\n              data={this.props.demographicData} \n              style={mapStyle} onEachFeature={onEachFeature} />) }\n        <ZoomControl position='topright' />\n      </Map>\n        <Legend \n          options={focusOptions} />\n     \n    </div>\n    );\n\n  }\n}\n\nexport default LeafletMap;\n","import React from 'react';\nimport LeafletMap from './components/LeafletMap';\n\nimport mapOptions from './data/mapOptions.json';\n\nimport './App.scss'\n\nconst GENT_LAYER_NAMES = ['udp_2015_1','bayarea_commercialtracts_comdist_c_','commercial_gent_status'];\n\nclass App extends React.Component {\n\nconstructor() {\n    super()\n    this.state = {\n      focusData: 'udp_2015_1',\n      gentrificationData: null,\n      demographicData: null\n    }\n  }\n\n    /** Load map data from github */\n  componentDidMount() {\n\n    fetch('https://raw.githubusercontent.com/cci-ucb/baygentrificationdata/master/gentrificationData.json')\n      .then((response) => response.json())\n      .then((responseJson) => {\n          this.setState({ gentrificationData: responseJson });\n          fetch('https://raw.githubusercontent.com/cci-ucb/baygentrificationdata/master/demographicData.json')\n            .then((response) => response.json())\n            .then((responseJson) => {\n                this.setState({ demographicData: responseJson });\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n      })\n      .catch((error) => {\n          console.error(error);\n      });\n  }\n\n  render() {\n\n    return (\n      !this.state.gentrificationData || !this.state.demographicData ? \n      <div className=\"uk-position-center\">\n        <span uk-spinner=\"ratio: 2\" />\n        <p>Loading...</p>\n      </div> :\n      <div>\n        <div className=\"overlay-container\">\n          <button className=\"uk-button uk-button-default policy-selector\" type=\"button\">Map a data series... </button>\n          <div uk-dropdown=\"pos: bottom-right; mode: click\">\n            <div className=\"uk-height-medium uk-overflow-auto\">\n              <ul className=\"uk-nav uk-dropdown-nav\">\n                {mapOptions.map( (dataset, i) => \n                  <li key={i}>\n                    <a href='#' \n                      className={(this.state.focusData === dataset.column_name ? \"active\" : \"\")}\n                      onClick={() => this.setState({focusData: dataset.column_name})}>\n                        {dataset.map_name}\n                    </a>\n                  </li> )}\n              </ul>\n            </div>\n          </div>\n        </div>\n          <LeafletMap \n            gentrificationData={this.state.gentrificationData}\n            demographicData={this.state.demographicData}\n            focusData={this.state.focusData} \n            focusDataType={(GENT_LAYER_NAMES.includes(this.state.focusData)) ? \"gentrification\" : \"demographic\"} />\n      </div>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}